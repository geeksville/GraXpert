name: testing

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - develop

jobs: 
  test-linux:
    runs-on: ubuntu-24.04
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: checkout repository
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          pip install -r requirements.txt
          pip install onnxruntime # the github builders don't have GPUs anyways
          pip install pytest cx_Freeze build setuptools
      - name: patch version
        run: |
          chmod u+x ./releng/patch_version.sh && \
          ./releng/patch_version.sh
      - name: test version
        run: cat ./graxpert/version.py
      - name: Run tests
        run: python -m pytest --import-mode=append tests/
      - name: confirm pypi image builds
        run: python -m build         
      - name: confirm old style linux bundle builds
        run: python ./setup.py install_exe --install-dir=./dist/GraXpert-linux
      - name: confirm AppImage builds
        run: python ./setup.py bdist_appimage      


  test-windows:
    runs-on: windows-2025
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: checkout repository
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          pip install -r requirements.txt
          pip install onnxruntime-directml
          pip install pytest cx_Freeze build setuptools
      - name: patch version
        run: ./releng/patch_version.ps1
      - name: test version
        run: type ./graxpert/version.py
      - name: Run tests
        run: python -m pytest --import-mode=append tests/
      - name: confirm msi installer builds
        run: python ./setup.py bdist_msi

  test-macos-x86_64:
    runs-on: macos-14
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      # No longer needed on recent macos containers
      # - name: unbreak python in github actions
      #   run: |
      #    find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
      #    sudo rm -rf /Library/Frameworks/Python.framework/
      #    brew install --force python3 && brew unlink python3 && brew unlink python3 && brew link --overwrite python3
      - name: install dependencies
        run: |
          brew install python-tk && \
          pip3 install --break-system-packages -r requirements.txt
          pip3 install --break-system-packages pytest cx_Freeze build setuptools
      - name: patch version
        run: |
          chmod u+x ./releng/patch_version.sh && \
          ./releng/patch_version.sh
      - name: Run tests
        run: python3 -m pytest --import-mode=append tests/
      - name: test cx_Freeze osx installer build
        run: python ./setup.py bdist_mac

  test-devcontainer:
    runs-on: ubuntu-24.04
    # These permissions are needed to push the devcontainer image to the GitHub Container Registry
    permissions:
      contents: read
      packages: write 
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests in dev container
        uses: devcontainers/ci@v0.3
        with:
          # Use this as a cache to avoid rebuilding the container on every CI run (also devs can use it as a known working prebuilt dev environment for main branch)
          imageName: ghcr.io/${{ github.repository_owner }}/graxpert-${{ github.ref_name }}-devcontainer

          runCmd: |
            pip install --user pytest
            python -m pytest --import-mode=append tests/